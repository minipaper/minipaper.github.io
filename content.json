{"meta":{"title":"minipaper's IT DEV Blog","subtitle":"minipaper's IT DEV Blog","description":"minipaper's IT DEV Blog","author":"minipaper","url":"http://minipaper.github.io"},"pages":[],"posts":[{"title":"angular2 with spring boot","slug":"angular2-spring-boot","date":"2017-05-01T16:14:01.000Z","updated":"2017-05-01T16:47:35.000Z","comments":true,"path":"2017/05/02/angular2-spring-boot/","link":"","permalink":"http://minipaper.github.io/2017/05/02/angular2-spring-boot/","excerpt":"","text":"0. 들어가기backend는 Spring bootfrontend는 Angular2스펙으로 개발을 진행하려고 합니다.Project└─── Spring Boot (backend)│ │ pom.xml│ │ ...│ └─── src│ └─── main│ │ ...│ └─── Angular2 (frontend) │ package.json │ .angular-cli.json │ ... 지금 프로젝트는 위에 구성과 같이 되어 있어서 spring boot 프로젝트 하나 angular ui 프로젝트 하나를 따로 만들어서 배포시 angular ui 빌드가 완료되면 해당 리소스를 backend서버 resource static 경로에 복사 한 후 다시 backend서버 쪽을 빌드를 하는 과정을 거쳐야 합니다. 물론 jenkins를 이용하면 쉽게도 빌드가 되겠지만 backend와 frontend를 동시에 개발해야 하는 경우에는 하나의 git 형상관리로 feature를 관리하고 싶은 욕심이 생겨 아래와 같은 삽질을 시작하게 되었습니다. 1. Spring Boot project 생성하기https://start.spring.io 를 이용해서 생성을 합니다.dependency에 Web 을 추가합니다. 더 필요한 것들은 추가로 선택합니다.프로젝트 생성 버튼을 누르고 다운로드 된 zip 파일을 원하는 작업공간에 압축을 풉니다.그리고 압축을 푼 해당 경로로 이동합니다. 2. 프로젝트를 모듈로 분리하기cd /workspace/ng2bootmkdir backendmkdir -p frontend/src/mainmv src backendcp pom.xml backend 최상단 pom.xml 파일 편집하기&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;!-- parent 프로젝트로 변경 --&gt; &lt;groupId&gt;net.minipaper.ng2boot&lt;/groupId&gt; &lt;artifactId&gt;parent&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;packaging&gt;pom&lt;/packaging&gt; &lt;name&gt;parent&lt;/name&gt; &lt;description&gt;The ng2boot parent project&lt;/description&gt; &lt;!--// parent 프로젝트로 변경 --&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;1.5.3.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;!-- 모듈 분리 --&gt; &lt;modules&gt; &lt;module&gt;frontend&lt;/module&gt; &lt;module&gt;backend&lt;/module&gt; &lt;/modules&gt; &lt;!--// 모듈 분리 --&gt;&lt;/project&gt; backend 내 pom.xml 편집&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;!-- backend 모듈 설정--&gt; &lt;artifactId&gt;backend&lt;/artifactId&gt; &lt;name&gt;backend&lt;/name&gt; &lt;description&gt;The ng2boot backend project&lt;/description&gt; &lt;parent&gt; &lt;groupId&gt;net.minipaper.ng2boot&lt;/groupId&gt; &lt;artifactId&gt;parent&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;/parent&gt; &lt;!--// backend 모듈 설정--&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;!-- dependency 중략 --&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; backend pom.xml 파일 frontend pom.xml로 복사해서 편집&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;!-- frontend 모듈 설정--&gt; &lt;artifactId&gt;frontend&lt;/artifactId&gt; &lt;name&gt;frontend&lt;/name&gt; &lt;description&gt;The ng2boot frontend project&lt;/description&gt; &lt;parent&gt; &lt;groupId&gt;net.minipaper.ng2boot&lt;/groupId&gt; &lt;artifactId&gt;parent&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;/parent&gt; &lt;!--// frontend 모듈 설정--&gt; &lt;build&gt; &lt;plugins&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; 3. Angular2 프로젝트에 추가하기angular-cli가 설치되어있지 않다면 npm을 통해서 설치를 합니다. npm install -g @angular/cli frontend/src/main 경로로 이동합니다.그리고 angular-cli를 이용해서 새로운 프로젝트를 생성합니다.이때 root폴더가 아니기 때문에 --skip-git 옵션을 이용해서 git repository생성을 하지 않습니다. cd ~/workspace/ng2boot/frontend/src/mainng new --skip-git --directory frontend ng2boot 참고로 메이븐 빌드시에 소스파일들과 node_modules 소스들이 jar 패키징에 들어가는걸 예방하기위해src/main/frontend 경로를 사용했습니다. 4. 메이븐 빌드를 위한 Angular2 설정하기메이븐에서 angular2를 빌드하기 위해서 frontend-maven-plugin 를 사용할 것입니다. frontend의 pom.xml 파일안에 plugins에 아래 내용을 추가합니다.&lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;com.github.eirslett&lt;/groupId&gt; &lt;artifactId&gt;frontend-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3&lt;/version&gt; &lt;configuration&gt; &lt;nodeVersion&gt;v6.10.1&lt;/nodeVersion&gt;o &lt;npmVersion&gt;4.4.1&lt;/npmVersion&gt; &lt;workingDirectory&gt;src/main/frontend&lt;/workingDirectory&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;install node and npm&lt;/id&gt; &lt;goals&gt; &lt;goal&gt;install-node-and-npm&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;execution&gt; &lt;id&gt;npm install&lt;/id&gt; &lt;goals&gt; &lt;goal&gt;npm&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;execution&gt; &lt;id&gt;npm run build&lt;/id&gt; &lt;goals&gt; &lt;goal&gt;npm&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;arguments&gt;run build&lt;/arguments&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt;&lt;/plugins&gt; 사용할 node 버전과 npm 버전을 작성해주시면 됩니다. 빌드를 할 때 형상관리가 필요하지 않은 파일들이 있기 때문에 root경로에 .gitignore파일 가장 아래에 다음 내용을 추가해 줍니다.### Frontend ###frontend/src/main/frontend/node/frontend/src/main/frontend/node_modules/ 그리고 기본적으로 angular-cli는 src\\main\\frontend\\dist에 빌드를 하기 때문에 메이븐 레이아웃에 맞게 변경해 줍니다. .angular-cli.json내에 outDir 속성을 변경해 줍니다.\"apps\": [ &#123; \"root\": \"src\", \"outDir\": \"../../../target/frontend\", \"assets\": [ \"assets\", \"favicon.ico\" ], \"index\": \"index.html\", \"main\": \"main.ts\", \"polyfills\": \"polyfills.ts\", \"test\": \"test.ts\", \"tsconfig\": \"tsconfig.app.json\", \"testTsconfig\": \"tsconfig.spec.json\", \"prefix\": \"app\", \"styles\": [ \"styles.css\" ], \"scripts\": [], \"environmentSource\": \"environments/environment.ts\", \"environments\": &#123; \"dev\": \"environments/environment.ts\", \"prod\": \"environments/environment.prod.ts\" &#125; &#125;] 5. Spring boot static 리소스 경로 추가하기스프링 부트는 Java 클래스 경로에 있는 여러 디렉토리의 static 컨텐츠를 제공합니다. 기본으로 제공하는 디렉토리말고 angular2 빌드한 리소스 파일경로를 static 컨텐츠로 추가합니다.frontend/pom.xml 파일을 수정합니다. &lt;!-- 생략 --&gt; &lt;/plugins&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;target/frontend&lt;/directory&gt; &lt;targetPath&gt;static&lt;/targetPath&gt; &lt;/resource&gt; &lt;/resources&gt;&lt;/build&gt; backend/pom.xml 파일에 frontend모듈의 dependency를 추가합니다. &lt;!-- Add a dependency to the Angular2 application --&gt; &lt;dependency&gt; &lt;groupId&gt;net.minipaper.ng2boot&lt;/groupId&gt; &lt;artifactId&gt;frontend&lt;/artifactId&gt; &lt;version&gt;$&#123;project.version&#125;&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 6. 구동 해봅시다.cd ~/workspace/ng2boot./mvnw clean package 아래와 같이 빌드 로그들이 나옵니다../mvnw clean package/Users/minipaper/workspace/ng2boot[INFO] Scanning for projects...[INFO] ------------------------------------------------------------------------[INFO] Reactor Build Order:[INFO][INFO] parent[INFO] frontend[INFO] backend[INFO][INFO] ------------------------------------------------------------------------[INFO] Building parent 0.0.1-SNAPSHOT[INFO] ------------------------------------------------------------------------[INFO][INFO] --- maven-clean-plugin:2.6.1:clean (default-clean) @ parent ---[INFO][INFO] ------------------------------------------------------------------------[INFO] Building frontend 0.0.1-SNAPSHOT[INFO] ------------------------------------------------------------------------[INFO][INFO] ------------------------------------------------------------------------[INFO] Reactor Summary:[INFO][INFO] parent ............................................. SUCCESS [ 0.249 s][INFO] frontend ........................................... SUCCESS [ 25.668 s][INFO] backend ............................................ SUCCESS [ 11.530 s][INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------[INFO] Total time: 38.072 s[INFO] Finished at: 2017-05-02T00:39:11+09:00[INFO] Final Memory: 34M/308M[INFO] ------------------------------------------------------------------------ 빌드가 성공했으니 jar 파일을 run 해보겠습니다.java -jar backend/target/backend-0.0.1-SNAPSHOT.jar http://localhost:8080 으로 접속하면 화면이 나옵니다. 7. 개발팁angular-cli를 이용해 ng serve를 통해 개발을 하면 포트가 backend 서버랑 달라 Same Origin Policy정책 위반으로 request 요청을 하지 않게 됩니다.backend 서버가 8080 포트를 사용한다고 하였을 떄 frontend에서는 proxy를 사용하여 angular2에서 우회 하여 개발 할 수 있습니다. ng2boot/frontend/src/main/frontend 경로에 proxy.conf.json 파일을 생성하고 아래와 같이 입력합니다. /api로 시작하는 경로는 모두 아래와 같은 타겟에 전달합니다. &#123; \"/api\": &#123; \"target\": \"http://localhost:8080\", \"secure\": false &#125;&#125; 그리고 package.json의 start 명령어에 --proxy-config 옵션을 추가합니다.\"scripts\": &#123; \"ng\": \"ng\", \"start\": \"ng serve --proxy-config proxy.conf.json\", \"build\": \"ng build\", \"test\": \"ng test\", \"lint\": \"ng lint\", \"e2e\": \"ng e2e\"&#125; 서버는 backend 디렉토리에서 mvn spring-boot:run으로 구동하고 frontend는 frontend\\src\\main\\frontend 경로에서 npm run start을 통해 http://localhost:4200 에서 backend와 분리시켜 개발을 진행하면 됩니다. 8. 참고github에서도 볼 수 있습니다. 참고 사이트scaffold","categories":[{"name":"Dev","slug":"Dev","permalink":"http://minipaper.github.io/categories/Dev/"}],"tags":[{"name":"angular2","slug":"angular2","permalink":"http://minipaper.github.io/tags/angular2/"},{"name":"spring boot","slug":"spring-boot","permalink":"http://minipaper.github.io/tags/spring-boot/"}]},{"title":"내가 설치한 프로그램","slug":"useful-mac-software","date":"2017-05-01T10:43:54.000Z","updated":"2017-05-01T10:43:56.000Z","comments":true,"path":"2017/05/01/useful-mac-software/","link":"","permalink":"http://minipaper.github.io/2017/05/01/useful-mac-software/","excerpt":"","text":"Useful Application유용하게 사용하는 프로그램 목록 1password - Password manager Appcleaner – Application Uninstaller Alfred – Keyboard command prompt Atom - Text editor Cyberduck – FTP, SFTP, WebDAV, S3, Backblaze B2, Azure &amp; OpenStack Swift browser Dash – API Documentation Browser Dropbox – Cloud file storage Evernote - 클라우드 메모 Sourcetree – Git GUI client Google Chrome – Web browser IINA – The modern video player for macOS iTerm2 – Terminal replacement oh my zsh – Terminal plugins Magnet – window split IntelliJ IDEA - IDE 툴 LICEcap – 움직이는 GIF 만들기 Keka - Keka is a free file archiver for macOS Kodi - TVHEADEND Client MeisterTask - 프로젝트 및 작업 관리 도구 Reeder – RSS reader Spectacle – Keyboard window management Slack - Team communication Translate Tab - 번역 Typora - Markdown Editor (Free during beta) Typeeto - Bluetooth keyboard VOX - Music player VLC - Video player Visual Studio Code - Visual Studio Code Weather Wall - 날씨에 맞는 바탕화면 Rocket Fuel - 맥 잠자기 방지 앱 Popclip - Context 메뉴 액션 툴 Paste - Paste 클립보드 매니저 (언제든지 추가 변경 될 수 있음) Command Line ToolsInstall homebrew/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" Install homebrew-caskhomebrew-cast는 macOS 의 어플리케이션을 편하고 빠르게 CLI툴로 설치할 수 있게 만들어 줍니다. - https://caskroom.github.io brew tap caskroom/cask Usage# 검색brew cask search &lt;cask-name&gt;## Examplebrew cask search chrome# 목록brew cask list# 설치brew cask install &lt;cask-name&gt;## Examplebrew cask install google-chrome# 삭제brew cask uninstall &lt;cask-name&gt;## Examplebrew cask uninstall google-chrome 자세한 사용법 공식 Usage 참조 SettingiTerm2 + Oh My Zsh 설정 링크","categories":[{"name":"Dev","slug":"Dev","permalink":"http://minipaper.github.io/categories/Dev/"},{"name":"MAC","slug":"Dev/MAC","permalink":"http://minipaper.github.io/categories/Dev/MAC/"},{"name":"Software","slug":"Dev/MAC/Software","permalink":"http://minipaper.github.io/categories/Dev/MAC/Software/"}],"tags":[{"name":"mac","slug":"mac","permalink":"http://minipaper.github.io/tags/mac/"},{"name":"software","slug":"software","permalink":"http://minipaper.github.io/tags/software/"}]}]}